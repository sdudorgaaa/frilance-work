from aiogram import Bot, Dispatcher, executor, types
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from time import sleep
from data_base import add_filt_three
from filt_two import supec
from parce import filt_one_two, three_control
from data_base import get_three, grom, get_block_list


bot = Bot("6212269832:AAHONSk4HhjKxMRRPAyPW3e-gOlhSa1lTpQ")  # –¢–æ–∫–µ–Ω –±–æ—Ç–∞

dp = Dispatcher(bot)


@dp.message_handler(commands='start')
async def main(message: types.Message):
    inline_kb = InlineKeyboardMarkup()
    grom_button = InlineKeyboardButton("–ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å –ª–∏–≥—É", callback_data="grom")
    inline_kb.add(grom_button)

    await bot.send_message(message.from_user.id, "–Ø –∑–∞–ø—É—â–µ–Ω!")
    filt = [] #–°–ø–∏—Å–æ–∫ –¥–ª—è –º–∞—Ç—á–µ–π –∑–∞ –∫–æ—Ç–æ—Ä—ã–º–∏ –≤–µ–¥–µ—Ç—Å—è –∫–æ–Ω—Ç—Ä–æ–ª—å
    while True:
        los = filt_one_two() #–ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –º–∞—Ç—á–µ–π(—Å—Å—ã–ª–∫–∏)  
        for num in los: #–î–ª—è –∫–∞–∂–æ–≥–æ –º–∞—Ç—á–∞ –∏–∑ los
            if num in filt: # –°–º–æ—Ä—Ç–∏–º, –≤–µ–¥—ë—Ç—Å—è –ª–∏ —É–∂–µ –∫–æ–Ω—Ç—Ä–æ–ª—å –∑–∞ –¥–∞–Ω–Ω—ã–º –º–∞—Ç—á–µ–º 
                pass # –ï—Å–ª–∏ –¥–∞, —Ç–æ –ø—Ä–æ–ø—É—Å–∫–∞–µ–º –µ–≥–æ 
            else: # –ò–Ω–∞—á–µ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤ –±–æ—Ç–∞ —Å–∏–≥–Ω–∞–ª –æ –ø–æ–¥—Ö–æ–¥—è—â–µ–º –º–∞—Ç—á–µ
                global gh
                gh = supec(num) # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ—É –æ –º–∞—Ç—á–µ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ 
                print(f"\n–õ–∏–≥–∞: {gh[0]}\n\n{gh[1]} vs {gh[2]}\n\n–°—á—ë—Ç: {gh[3]}:{gh[4]}\n")
                sleep(1)
                send_three = await bot.send_message(message.from_user.id, f"\n‚öΩÔ∏è –õ–∏–≥–∞: {gh[0]} ‚öΩÔ∏è\n\nüî∞ {gh[1]} vs {gh[2]} üî∞\n\n‚öúÔ∏è –°—á—ë—Ç: {gh[3]}:{gh[4]} ‚öúÔ∏è\n", reply_markup=inline_kb) # –®–ª—ë–º –∏–Ω—Ñ—É–æ –ø–æ–¥–æ—à–µ–¥—à–µ–º –º–∞—Ç—á–µ –≤ –±–æ—Ç–∞
                add_filt_three(send_three["message_id"], num, gh[3], gh[4]) #–î–æ–±–∞–ª—è–µ–º –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö –∏–Ω—Ñ—É –æ –º–∞—Ç—á–µ –∑–∞ –∫–æ—Ç–æ—Ä—ã–º –ø—Ä–æ–¥–æ–ª–∂–∏–º –Ω–∞–±–ª—é–¥–∞—Ç—å
                filt.append(num) #–î–æ–±–∞–≤–ª—è–µ–º –º–∞—Ç—á –≤ —Å–ø–∏—Å–æ–∫ –¥–ª—è –∫–æ–Ω—Ç—Ä–æ–ª—è —É–∂–µ –ø—Ä–æ—Å–∏–≥–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –º–∞—Ç—á–µ–π

        tuy = get_three() #–ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ—É –æ –º–∞—Ç—á–∞—Ö –≤ –ë–î (–¢–µ—Ö –∑–∞ –∫–æ—Ç–æ—Ä—ã–º–∏ –Ω–∞–±–ª—é–¥–∞–µ–º)
        for lam in tuy: #–î–ª—è –∫–∞–∂–¥–æ–≥–æ –∏–∑ —ç—Ç–∏—Ö –º–∞—Ç—á–µ–π
            try: #–ß–µ–∫–∞–µ–º —Å—á—ë—Ç, –µ—Å–ª–∏ —Ñ—É–Ω–∫—Ü–∏—è –≤–µ—Ä–Ω—É–ª–∞ –∑–Ω–∞—á–µ–Ω–∏–µ, –º–µ–Ω—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
                uni = three_control(lam) #–ß–µ–∫–∞–µ–º —Å—á—ë—Ç
                print(uni)
                await bot.edit_message_text(text=f"\n‚öΩÔ∏è –õ–∏–≥–∞: {gh[0]} ‚öΩÔ∏è\n\nüî∞ {gh[1]} vs {gh[2]} üî∞\n\n‚öúÔ∏è –°—á—ë—Ç: {uni[1]}:{uni[2]} ‚öúÔ∏è\n\n‚úÖ Goals: {uni[3]} ‚úÖ", message_id=uni[0]) #–ò–∑–º–µ–Ω—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
            except:
                continue #–ò–Ω—á–∞–µ –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º —á–µ–∫–∞—Ç—å –≤—Å–µ –º–∞—Ç—á–∏ –≤ –ë–î

@dp.callback_query_handler(lambda c: c.data == "grom")
async def process_callback_grom(callback_query: types.CallbackQuery):
    await bot.answer_callback_query(callback_query.id)
    await grom(gh[0])

@dp.message_handler(commands='block')
async def main(message: types.Message):
    await bot.send_message(message.from_user.id, get_block_list())
    await bot.send_message(message.from_user.id, "–î–ª—è —Ç–æ–≥–æ —á—Ç–æ –±—ã —É–¥–∞–ª–∏—Ç—å –õ–∏–≥—É –∏–∑ –ß—ë—Ä–Ω–æ–≥–æ —Å–ø–∏—Å–∫–∞ –æ—Ç–ø—Ä–∞–≤—å –º–Ω–µ –µ—ë –Ω–∞–∑–≤–∞–Ω–∏–µ")



if __name__ == "__main__":
	executor.start_polling(dp)

